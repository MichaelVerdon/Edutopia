{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\Board.js\";\n// Board.js\nimport React, { Component } from 'react';\nimport { HexGrid, Layout, GridGenerator } from 'react-hexgrid';\nimport InteractiveHexagon from './InteractiveHexagon';\nimport Tile from './Tile';\nimport configs from './configurations';\nimport gapData from './gapCoordinates.json';\nimport plains from './plains.png'; // Update the path as necessary\nimport mountain from './mountain.png'; // Update the path as necessary\n\n// Define the Patterns component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patterns = () => /*#__PURE__*/_jsxDEV(\"defs\", {\n  children: [/*#__PURE__*/_jsxDEV(\"pattern\", {\n    id: \"pat1\",\n    patternUnits: \"userSpaceOnUse\",\n    width: \"30\",\n    height: \"30\",\n    children: /*#__PURE__*/_jsxDEV(\"image\", {\n      href: plains,\n      x: \"0\",\n      y: \"0\",\n      width: \"30\",\n      height: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"pattern\", {\n    id: \"pat2\",\n    patternUnits: \"userSpaceOnUse\",\n    width: \"30\",\n    height: \"30\",\n    children: /*#__PURE__*/_jsxDEV(\"image\", {\n      href: mountain,\n      x: \"0\",\n      y: \"0\",\n      width: \"30\",\n      height: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 5\n}, this);\n_c = Patterns;\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    const config = configs['rectangle'];\n    const generator = GridGenerator.getGenerator(config.map);\n    const hexCoordinates = generator.apply(this, config.mapProps);\n    const gapCoordinates = gapData.gapCoordinates;\n    const gapSet = new Set(gapCoordinates.map(coord => `${coord.q},${coord.r},${coord.s}`));\n    const hexagons = hexCoordinates.filter(hexCoord => !gapSet.has(`${hexCoord.q},${hexCoord.r},${hexCoord.s}`)).map(hexCoord => new Tile(hexCoord.q, hexCoord.r, hexCoord.s));\n    this.state = {\n      hexagons,\n      config,\n      viewBox: `${config.viewBox.x} ${config.viewBox.y} ${config.viewBox.width} ${config.viewBox.height}`\n    };\n  }\n  render() {\n    const {\n      hexagons,\n      config,\n      viewBox\n    } = this.state;\n    const size = {\n      x: config.layout.width,\n      y: config.layout.height\n    };\n    const containerStyle = {\n      width: '100%',\n      overflow: 'auto',\n      maxHeight: '100vh'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(HexGrid, {\n        width: config.width,\n        height: config.height,\n        viewBox: viewBox,\n        children: [/*#__PURE__*/_jsxDEV(Patterns, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Layout, {\n          size: size,\n          flat: config.layout.flat,\n          spacing: config.layout.spacing,\n          origin: config.origin,\n          children: hexagons.map((hex, i) => /*#__PURE__*/_jsxDEV(InteractiveHexagon, {\n            q: hex.q,\n            r: hex.r,\n            s: hex.s,\n            size: size,\n            tile: hex\n          }, `${hex.q},${hex.r},${hex.s}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Patterns\");","map":{"version":3,"names":["React","Component","HexGrid","Layout","GridGenerator","InteractiveHexagon","Tile","configs","gapData","plains","mountain","jsxDEV","_jsxDEV","Patterns","children","id","patternUnits","width","height","href","x","y","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","constructor","props","config","generator","getGenerator","map","hexCoordinates","apply","mapProps","gapCoordinates","gapSet","Set","coord","q","r","s","hexagons","filter","hexCoord","has","state","viewBox","render","size","layout","containerStyle","overflow","maxHeight","style","flat","spacing","origin","hex","i","tile","$RefreshReg$"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/Board.js"],"sourcesContent":["// Board.js\r\nimport React, { Component } from 'react';\r\nimport { HexGrid, Layout, GridGenerator } from 'react-hexgrid';\r\nimport InteractiveHexagon from './InteractiveHexagon';\r\nimport Tile from './Tile';\r\nimport configs from './configurations';\r\nimport gapData from './gapCoordinates.json';\r\nimport plains from './plains.png'; // Update the path as necessary\r\nimport mountain from './mountain.png'; // Update the path as necessary\r\n\r\n// Define the Patterns component\r\nconst Patterns = () => (\r\n    <defs>\r\n        <pattern id=\"pat1\" patternUnits=\"userSpaceOnUse\" width=\"30\" height=\"30\">\r\n            <image href={plains} x=\"0\" y=\"0\" width=\"30\" height=\"30\" />\r\n        </pattern>\r\n        <pattern id=\"pat2\" patternUnits=\"userSpaceOnUse\" width=\"30\" height=\"30\">\r\n            <image href={mountain} x=\"0\" y=\"0\" width=\"30\" height=\"30\" />\r\n        </pattern>\r\n    </defs>\r\n);\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const config = configs['rectangle'];\r\n        const generator = GridGenerator.getGenerator(config.map);\r\n        const hexCoordinates = generator.apply(this, config.mapProps);\r\n        const gapCoordinates = gapData.gapCoordinates;\r\n        const gapSet = new Set(gapCoordinates.map(coord => `${coord.q},${coord.r},${coord.s}`));\r\n        const hexagons = hexCoordinates.filter(hexCoord => !gapSet.has(`${hexCoord.q},${hexCoord.r},${hexCoord.s}`))\r\n                                       .map(hexCoord => new Tile(hexCoord.q, hexCoord.r, hexCoord.s));\r\n        this.state = { hexagons, config, viewBox: `${config.viewBox.x} ${config.viewBox.y} ${config.viewBox.width} ${config.viewBox.height}` };\r\n    }\r\n\r\n    render() {\r\n        const { hexagons, config, viewBox } = this.state;\r\n        const size = { x: config.layout.width, y: config.layout.height };\r\n        const containerStyle = { width: '100%', overflow: 'auto', maxHeight: '100vh' };\r\n\r\n        return (\r\n            <div style={containerStyle}>\r\n                <HexGrid width={config.width} height={config.height} viewBox={viewBox}>\r\n                    <Patterns />\r\n                    <Layout size={size} flat={config.layout.flat} spacing={config.layout.spacing} origin={config.origin}>\r\n                        {hexagons.map((hex, i) => (\r\n                            <InteractiveHexagon key={`${hex.q},${hex.r},${hex.s}`} q={hex.q} r={hex.r} s={hex.s} size={size} tile={hex} />\r\n                        ))}\r\n                    </Layout>\r\n                </HexGrid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}