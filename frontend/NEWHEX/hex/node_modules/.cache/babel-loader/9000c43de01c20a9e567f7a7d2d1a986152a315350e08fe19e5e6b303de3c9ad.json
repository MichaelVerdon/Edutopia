{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\Board.js\";\nimport React, { Component } from 'react';\nimport { HexGrid, Layout, Hexagon, Text, GridGenerator } from 'react-hexgrid';\nimport InteractiveHexagon from './InteractiveHexagon';\nimport Tile from './Tile';\nimport configs from './configurations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    const config = configs['rectangle'];\n    const generator = GridGenerator.getGenerator(config.map);\n    const hexCoordinates = generator.apply(this, config.mapProps);\n\n    // Create Tile instances for each hexagon\n    const hexagons = hexCoordinates.map(hexCoord => {\n      return new Tile(hexCoord.q, hexCoord.r, hexCoord.s); // Assuming Tile constructor takes q, r, and s\n    });\n    this.state = {\n      hexagons,\n      config\n    };\n  }\n  render() {\n    const {\n      hexagons,\n      config\n    } = this.state;\n    const size = {\n      x: config.layout.width,\n      y: config.layout.height\n    };\n    return /*#__PURE__*/_jsxDEV(HexGrid, {\n      width: config.width,\n      height: config.height,\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        size: size,\n        flat: config.layout.flat,\n        spacing: config.layout.spacing,\n        origin: config.origin,\n        children: hexagons.map((hex, i) => /*#__PURE__*/_jsxDEV(InteractiveHexagon, {\n          q: hex.q,\n          r: hex.r,\n          s: hex.s,\n          size: size,\n          tile: hex // Pass the Tile instance to InteractiveHexagon\n          ,\n          flat: true\n        }, `${hex.q},${hex.r},${hex.s}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n}\n;\nexport default Board;","map":{"version":3,"names":["React","Component","HexGrid","Layout","Hexagon","Text","GridGenerator","InteractiveHexagon","Tile","configs","jsxDEV","_jsxDEV","Board","constructor","props","config","generator","getGenerator","map","hexCoordinates","apply","mapProps","hexagons","hexCoord","q","r","s","state","render","size","x","layout","width","y","height","children","flat","spacing","origin","hex","i","tile","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/Board.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { HexGrid, Layout, Hexagon, Text, GridGenerator } from 'react-hexgrid';\r\nimport InteractiveHexagon from './InteractiveHexagon';\r\nimport Tile from './Tile';\r\nimport configs from './configurations';\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const config = configs['rectangle'];\r\n    const generator = GridGenerator.getGenerator(config.map);\r\n    const hexCoordinates = generator.apply(this, config.mapProps);\r\n\r\n    // Create Tile instances for each hexagon\r\n    const hexagons = hexCoordinates.map((hexCoord) => {\r\n      return new Tile(hexCoord.q, hexCoord.r, hexCoord.s); // Assuming Tile constructor takes q, r, and s\r\n    });\r\n\r\n    this.state = { hexagons, config };\r\n  }\r\n\r\n  render() {\r\n    const { hexagons, config } = this.state;\r\n    const size = { x: config.layout.width, y: config.layout.height };\r\n\r\n    return (\r\n      <HexGrid width={config.width} height={config.height}>\r\n        <Layout size={size} flat={config.layout.flat} spacing={config.layout.spacing} origin={config.origin}>\r\n          {hexagons.map((hex, i) => (\r\n            <InteractiveHexagon \r\n              key={`${hex.q},${hex.r},${hex.s}`}\r\n              q={hex.q}\r\n              r={hex.r}\r\n              s={hex.s}\r\n              size={size}\r\n              tile={hex} // Pass the Tile instance to InteractiveHexagon\r\n              flat={true}\r\n            />\r\n          ))}\r\n        </Layout>\r\n      </HexGrid>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,aAAa,QAAQ,eAAe;AAC7E,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,SAASX,SAAS,CAAC;EAC5BY,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,MAAMC,MAAM,GAAGN,OAAO,CAAC,WAAW,CAAC;IACnC,MAAMO,SAAS,GAAGV,aAAa,CAACW,YAAY,CAACF,MAAM,CAACG,GAAG,CAAC;IACxD,MAAMC,cAAc,GAAGH,SAAS,CAACI,KAAK,CAAC,IAAI,EAAEL,MAAM,CAACM,QAAQ,CAAC;;IAE7D;IACA,MAAMC,QAAQ,GAAGH,cAAc,CAACD,GAAG,CAAEK,QAAQ,IAAK;MAChD,OAAO,IAAIf,IAAI,CAACe,QAAQ,CAACC,CAAC,EAAED,QAAQ,CAACE,CAAC,EAAEF,QAAQ,CAACG,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC;IAEF,IAAI,CAACC,KAAK,GAAG;MAAEL,QAAQ;MAAEP;IAAO,CAAC;EACnC;EAEAa,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEN,QAAQ;MAAEP;IAAO,CAAC,GAAG,IAAI,CAACY,KAAK;IACvC,MAAME,IAAI,GAAG;MAAEC,CAAC,EAAEf,MAAM,CAACgB,MAAM,CAACC,KAAK;MAAEC,CAAC,EAAElB,MAAM,CAACgB,MAAM,CAACG;IAAO,CAAC;IAEhE,oBACEvB,OAAA,CAACT,OAAO;MAAC8B,KAAK,EAAEjB,MAAM,CAACiB,KAAM;MAACE,MAAM,EAAEnB,MAAM,CAACmB,MAAO;MAAAC,QAAA,eAClDxB,OAAA,CAACR,MAAM;QAAC0B,IAAI,EAAEA,IAAK;QAACO,IAAI,EAAErB,MAAM,CAACgB,MAAM,CAACK,IAAK;QAACC,OAAO,EAAEtB,MAAM,CAACgB,MAAM,CAACM,OAAQ;QAACC,MAAM,EAAEvB,MAAM,CAACuB,MAAO;QAAAH,QAAA,EACjGb,QAAQ,CAACJ,GAAG,CAAC,CAACqB,GAAG,EAAEC,CAAC,kBACnB7B,OAAA,CAACJ,kBAAkB;UAEjBiB,CAAC,EAAEe,GAAG,CAACf,CAAE;UACTC,CAAC,EAAEc,GAAG,CAACd,CAAE;UACTC,CAAC,EAAEa,GAAG,CAACb,CAAE;UACTG,IAAI,EAAEA,IAAK;UACXY,IAAI,EAAEF,GAAI,CAAC;UAAA;UACXH,IAAI,EAAE;QAAK,GANL,GAAEG,GAAG,CAACf,CAAE,IAAGe,GAAG,CAACd,CAAE,IAAGc,GAAG,CAACb,CAAE,EAAC;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOlC,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEd;AACF;AAAC;AAED,eAAejC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}