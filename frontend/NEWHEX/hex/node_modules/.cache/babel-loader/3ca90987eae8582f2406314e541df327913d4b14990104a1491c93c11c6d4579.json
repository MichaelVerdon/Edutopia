{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\Board.js\";\nimport React, { Component } from 'react';\nimport { HexGrid, Layout, Hexagon, Text, GridGenerator } from 'react-hexgrid';\nimport InteractiveHexagon from './InteractiveHexagon';\nimport Tile from './Tile';\nimport configs from './configurations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    const config = configs['rectangle'];\n    const generator = GridGenerator.getGenerator(config.map);\n    const hexCoordinates = generator.apply(this, config.mapProps);\n\n    // Create Tile instances for each hexagon\n    const hexagons = hexCoordinates.map(hexCoord => {\n      return new Tile(hexCoord.q, hexCoord.r, hexCoord.s);\n    });\n    this.state = {\n      hexagons,\n      config,\n      viewBox: `${config.viewBox.x} ${config.viewBox.y} ${config.viewBox.width} ${config.viewBox.height}`\n    };\n  }\n  render() {\n    const {\n      hexagons,\n      config,\n      viewBox\n    } = this.state;\n    const size = {\n      x: config.layout.width,\n      y: config.layout.height\n    };\n\n    // Container style for scrolling\n    const containerStyle = {\n      width: '100%',\n      overflowX: 'auto',\n      maxHeight: '100vh'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(HexGrid, {\n        width: config.width,\n        height: config.height,\n        viewBox: viewBox,\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          size: size,\n          flat: config.layout.flat,\n          spacing: config.layout.spacing,\n          origin: config.origin,\n          children: hexagons.map((hex, i) => /*#__PURE__*/_jsxDEV(InteractiveHexagon, {\n            q: hex.q,\n            r: hex.r,\n            s: hex.s,\n            size: size,\n            tile: hex // Pass the Tile instance to InteractiveHexagon\n          }, `${hex.q},${hex.r},${hex.s}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\n;\nexport default Board;","map":{"version":3,"names":["React","Component","HexGrid","Layout","Hexagon","Text","GridGenerator","InteractiveHexagon","Tile","configs","jsxDEV","_jsxDEV","Board","constructor","props","config","generator","getGenerator","map","hexCoordinates","apply","mapProps","hexagons","hexCoord","q","r","s","state","viewBox","x","y","width","height","render","size","layout","containerStyle","overflowX","maxHeight","style","children","flat","spacing","origin","hex","i","tile","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/Board.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { HexGrid, Layout, Hexagon, Text, GridGenerator } from 'react-hexgrid';\r\nimport InteractiveHexagon from './InteractiveHexagon';\r\nimport Tile from './Tile';\r\nimport configs from './configurations';\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const config = configs['rectangle'];\r\n    const generator = GridGenerator.getGenerator(config.map);\r\n    const hexCoordinates = generator.apply(this, config.mapProps);\r\n\r\n    // Create Tile instances for each hexagon\r\n    const hexagons = hexCoordinates.map((hexCoord) => {\r\n      return new Tile(hexCoord.q, hexCoord.r, hexCoord.s);\r\n    });\r\n\r\n    this.state = {\r\n      hexagons,\r\n      config,\r\n      viewBox: `${config.viewBox.x} ${config.viewBox.y} ${config.viewBox.width} ${config.viewBox.height}`,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { hexagons, config, viewBox } = this.state;\r\n    const size = { x: config.layout.width, y: config.layout.height };\r\n\r\n    // Container style for scrolling\r\n    const containerStyle = {\r\n      width: '100%',\r\n      overflowX: 'auto',\r\n      maxHeight: '100vh',\r\n      \r\n    };\r\n\r\n    return (\r\n      <div style={containerStyle}>\r\n        <HexGrid width={config.width} height={config.height} viewBox={viewBox}>\r\n          <Layout size={size} flat={config.layout.flat} spacing={config.layout.spacing} origin={config.origin}>\r\n            {hexagons.map((hex, i) => (\r\n              <InteractiveHexagon\r\n                key={`${hex.q},${hex.r},${hex.s}`}\r\n                q={hex.q}\r\n                r={hex.r}\r\n                s={hex.s}\r\n                size={size}\r\n                tile={hex} // Pass the Tile instance to InteractiveHexagon\r\n              />\r\n            ))}\r\n          </Layout>\r\n        </HexGrid>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}