{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\Board.js\",\n  _s = $RefreshSig$();\n//This component is responsible for rendering the hexagonal grid\n\nimport React, { useState, useEffect } from 'react';\nimport { HexGrid, Layout, GridGenerator } from 'react-hexgrid';\nimport InteractiveHexagon from './InteractiveHexagon';\nimport GameSettings from './GameSettings';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [tiles, setTiles] = useState([]);\n  useEffect(() => {\n    // Generate the grid based on GameSettings\n    const hexagons = GridGenerator.rectangle(GameSettings.gridWidth, GameSettings.gridHeight);\n    setTiles(hexagons.map(hex => new Tile(hex.q, hex.r, hex.s)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(HexGrid, {\n      width: 800,\n      height: 600,\n      viewBox: \"-50 -50 100 100\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        size: GameSettings.hexSize,\n        flat: true,\n        spacing: 1.1,\n        origin: {\n          x: 0,\n          y: 0\n        },\n        children: tiles.map((tile, i) => /*#__PURE__*/_jsxDEV(InteractiveHexagon, {\n          q: tile.q,\n          r: tile.r,\n          s: tile.s\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"K89rNACRvpWYUPpRRxSbp+VW0iM=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","HexGrid","Layout","GridGenerator","InteractiveHexagon","GameSettings","Tile","jsxDEV","_jsxDEV","Board","_s","tiles","setTiles","hexagons","rectangle","gridWidth","gridHeight","map","hex","q","r","s","className","children","width","height","viewBox","size","hexSize","flat","spacing","origin","x","y","tile","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/Board.js"],"sourcesContent":["//This component is responsible for rendering the hexagonal grid\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { HexGrid, Layout, GridGenerator } from 'react-hexgrid';\r\nimport InteractiveHexagon from './InteractiveHexagon';\r\nimport GameSettings from './GameSettings';\r\nimport Tile from './Tile';\r\n\r\nconst Board = () => {\r\n  const [tiles, setTiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Generate the grid based on GameSettings\r\n    const hexagons = GridGenerator.rectangle(GameSettings.gridWidth, GameSettings.gridHeight);\r\n    setTiles(hexagons.map(hex => new Tile(hex.q, hex.r, hex.s)));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HexGrid width={800} height={600} viewBox=\"-50 -50 100 100\">\r\n        <Layout size={GameSettings.hexSize} flat={true} spacing={1.1} origin={{ x: 0, y: 0 }}>\r\n          {tiles.map((tile, i) => (\r\n            <InteractiveHexagon key={i} q={tile.q} r={tile.r} s={tile.s} />\r\n          ))}\r\n        </Layout>\r\n      </HexGrid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,MAAM,EAAEC,aAAa,QAAQ,eAAe;AAC9D,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,QAAQ,GAAGV,aAAa,CAACW,SAAS,CAACT,YAAY,CAACU,SAAS,EAAEV,YAAY,CAACW,UAAU,CAAC;IACzFJ,QAAQ,CAACC,QAAQ,CAACI,GAAG,CAACC,GAAG,IAAI,IAAIZ,IAAI,CAACY,GAAG,CAACC,CAAC,EAAED,GAAG,CAACE,CAAC,EAAEF,GAAG,CAACG,CAAC,CAAC,CAAC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBf,OAAA,CAACP,OAAO;MAACuB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACC,OAAO,EAAC,iBAAiB;MAAAH,QAAA,eACzDf,OAAA,CAACN,MAAM;QAACyB,IAAI,EAAEtB,YAAY,CAACuB,OAAQ;QAACC,IAAI,EAAE,IAAK;QAACC,OAAO,EAAE,GAAI;QAACC,MAAM,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QAAAV,QAAA,EAClFZ,KAAK,CAACM,GAAG,CAAC,CAACiB,IAAI,EAAEC,CAAC,kBACjB3B,OAAA,CAACJ,kBAAkB;UAASe,CAAC,EAAEe,IAAI,CAACf,CAAE;UAACC,CAAC,EAAEc,IAAI,CAACd,CAAE;UAACC,CAAC,EAAEa,IAAI,CAACb;QAAE,GAAnCc,CAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoC,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApBID,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}