{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\InteractiveHexagon.js\",\n  _s = $RefreshSig$();\n// InteractiveHexagon.js\nimport React, { useState } from 'react';\nimport { Hexagon, Text } from 'react-hexgrid';\nimport configs from './configurations';\nimport './hex.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveHexagon = ({\n  tile\n}) => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const handleClick = () => {\n    console.log('Hexagon clicked');\n    console.log(tile.getTileInfo());\n    setIsActive(!isActive);\n  };\n  const patternId1 = 'patternPlains';\n  const patternId2 = 'patternMountain';\n  const plainsPattern = this.tile.biome === \"Plains\" ? /*#__PURE__*/_jsxDEV(RotatedPattern, {\n    id: patternId1,\n    link: plains,\n    size: {\n      x: 30,\n      y: 30\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this) : null;\n  const mountainPattern = this.tile.biome === \"Mountain\" ? /*#__PURE__*/_jsxDEV(RotatedPattern, {\n    id: patternId2,\n    link: mountain,\n    size: {\n      x: 30,\n      y: 30\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this) : null;\n  const fillColor = tile.biome === \"Plains\" ? \"url(#pat1)\" : tile.biome === \"Mountain\" ? \"url(#pat2)\" : \"none\";\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Hexagon, {\n      q: tile.q,\n      r: tile.r,\n      s: tile.s,\n      size: configs.hexSize,\n      fill: isActive ? 'red' : fillColor,\n      onClick: handleClick,\n      className: `hexagon-group ${isActive ? 'active' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        className: \"hexagon-text\",\n        children: `${tile.q},${tile.r},${tile.s}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(InteractiveHexagon, \"OFRYOMGmWDzfQ4dzLF00ag1mHo0=\");\n_c = InteractiveHexagon;\nconst RotatedPattern = ({\n  id,\n  link\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  style: {\n    height: 0\n  },\n  children: /*#__PURE__*/_jsxDEV(\"defs\", {\n    children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n      id: id,\n      patternUnits: \"objectBoundingBox\",\n      width: \"1\",\n      height: \"1\",\n      viewBox: \"0 0 30 30\",\n      preserveAspectRatio: \"xMidYMid slice\",\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"rotate(30, 15, 15)\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"image\", {\n          href: link,\n          x: \"0\",\n          y: \"0\",\n          width: \"30\",\n          height: \"30\",\n          preserveAspectRatio: \"xMidYMid slice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 5\n}, this);\n_c2 = RotatedPattern;\nexport default InteractiveHexagon;\nvar _c, _c2;\n$RefreshReg$(_c, \"InteractiveHexagon\");\n$RefreshReg$(_c2, \"RotatedPattern\");","map":{"version":3,"names":["React","useState","Hexagon","Text","configs","jsxDEV","_jsxDEV","InteractiveHexagon","tile","_s","isActive","setIsActive","handleClick","console","log","getTileInfo","patternId1","patternId2","plainsPattern","biome","RotatedPattern","id","link","plains","size","x","y","fileName","_jsxFileName","lineNumber","columnNumber","mountainPattern","mountain","fillColor","Fragment","children","q","r","s","hexSize","fill","onClick","className","_c","style","height","patternUnits","width","viewBox","preserveAspectRatio","transform","href","_c2","$RefreshReg$"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/InteractiveHexagon.js"],"sourcesContent":["// InteractiveHexagon.js\r\nimport React, { useState } from 'react';\r\nimport { Hexagon, Text } from 'react-hexgrid';\r\nimport configs from './configurations';\r\nimport './hex.css';\r\n\r\nconst InteractiveHexagon = ({ tile }) => {\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        console.log('Hexagon clicked');\r\n        console.log(tile.getTileInfo());\r\n        setIsActive(!isActive);\r\n    };\r\n    const patternId1 = 'patternPlains';\r\n    const patternId2 = 'patternMountain';\r\n    const plainsPattern = this.tile.biome === \"Plains\" ? (\r\n      <RotatedPattern id={patternId1} link={plains} size={{ x: 30, y: 30 }} />\r\n    ) : null;\r\n\r\n    const mountainPattern = this.tile.biome === \"Mountain\" ? (\r\n      <RotatedPattern id={patternId2} link={mountain} size={{ x: 30, y: 30 }} />\r\n    ) : null;\r\n\r\n    const fillColor = tile.biome === \"Plains\" ? \"url(#pat1)\" : \r\n                     tile.biome === \"Mountain\" ? \"url(#pat2)\" : \r\n                     \"none\";\r\n    return (\r\n        <React.Fragment>\r\n        <Hexagon q={tile.q} r={tile.r} s={tile.s} size={configs.hexSize} fill={isActive ? 'red' : fillColor} onClick={handleClick} className={`hexagon-group ${isActive ? 'active' : ''}`}>\r\n            <Text className=\"hexagon-text\">{`${tile.q},${tile.r},${tile.s}`}</Text>\r\n        </Hexagon>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst RotatedPattern = ({ id, link }) => (\r\n    <svg style={{ height: 0 }}>\r\n      <defs>\r\n        <pattern id={id} patternUnits=\"objectBoundingBox\" width=\"1\" height=\"1\" viewBox=\"0 0 30 30\" preserveAspectRatio=\"xMidYMid slice\">\r\n          <g transform=\"rotate(30, 15, 15)\"> {/* Rotate around the center */}\r\n            <image href={link} x=\"0\" y=\"0\" width=\"30\" height=\"30\" preserveAspectRatio=\"xMidYMid slice\" />\r\n          </g>\r\n        </pattern>\r\n      </defs>\r\n    </svg>\r\n  );\r\n\r\nexport default InteractiveHexagon;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}