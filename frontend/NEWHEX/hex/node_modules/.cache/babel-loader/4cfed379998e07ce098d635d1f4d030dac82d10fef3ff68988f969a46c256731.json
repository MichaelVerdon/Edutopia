{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\InteractiveHexagon.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Hexagon, Text } from 'react-hexgrid';\nimport configs from './configurations';\nimport './hex.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveHexagon = ({\n  tile\n}) => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const handleClick = () => {\n    console.log('Hexagon clicked');\n    console.log(tile.getTileInfo());\n    setIsActive(!isActive);\n  };\n  const fillColor = isActive ? 'red' : determineFillColor(tile.biome);\n  return /*#__PURE__*/_jsxDEV(Hexagon, {\n    q: tile.q,\n    r: tile.r,\n    s: tile.s,\n    size: configs.hexSize,\n    fill: fillColor,\n    onClick: handleClick,\n    className: `hexagon-group ${isActive ? 'active' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      className: \"hexagon-text\",\n      children: `${tile.q},${tile.r},${tile.s}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n  function determineFillColor(biome) {\n    switch (biome) {\n      case \"Plains\":\n        return \"url(#pat1)\";\n      case \"Mountain\":\n        return \"url(#pat2)\";\n      default:\n        return \"none\";\n    }\n  }\n};\n_s(InteractiveHexagon, \"OFRYOMGmWDzfQ4dzLF00ag1mHo0=\");\n_c = InteractiveHexagon;\nexport default InteractiveHexagon;\nvar _c;\n$RefreshReg$(_c, \"InteractiveHexagon\");","map":{"version":3,"names":["React","useState","Hexagon","Text","configs","jsxDEV","_jsxDEV","InteractiveHexagon","tile","_s","isActive","setIsActive","handleClick","console","log","getTileInfo","fillColor","determineFillColor","biome","q","r","s","size","hexSize","fill","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/InteractiveHexagon.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Hexagon, Text } from 'react-hexgrid';\r\nimport configs from './configurations';\r\nimport './hex.css';\r\n\r\nconst InteractiveHexagon = ({ tile }) => {\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        console.log('Hexagon clicked');\r\n        console.log(tile.getTileInfo());\r\n        setIsActive(!isActive);\r\n    };\r\n\r\n    const fillColor = isActive ? 'red' : determineFillColor(tile.biome);\r\n\r\n    return (\r\n        <Hexagon \r\n            q={tile.q} \r\n            r={tile.r} \r\n            s={tile.s} \r\n            size={configs.hexSize} \r\n            fill={fillColor} \r\n            onClick={handleClick}\r\n            className={`hexagon-group ${isActive ? 'active' : ''}`}\r\n        >\r\n            <Text className=\"hexagon-text\">{`${tile.q},${tile.r},${tile.s}`}</Text>\r\n        </Hexagon>\r\n    );\r\n\r\n    function determineFillColor(biome) {\r\n        switch (biome) {\r\n            case \"Plains\":\r\n                return \"url(#pat1)\";\r\n            case \"Mountain\":\r\n                return \"url(#pat2)\";\r\n            default:\r\n                return \"none\";\r\n        }\r\n    }\r\n};\r\n\r\nexport default InteractiveHexagon;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,IAAI,QAAQ,eAAe;AAC7C,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAACN,IAAI,CAACO,WAAW,CAAC,CAAC,CAAC;IAC/BJ,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMM,SAAS,GAAGN,QAAQ,GAAG,KAAK,GAAGO,kBAAkB,CAACT,IAAI,CAACU,KAAK,CAAC;EAEnE,oBACIZ,OAAA,CAACJ,OAAO;IACJiB,CAAC,EAAEX,IAAI,CAACW,CAAE;IACVC,CAAC,EAAEZ,IAAI,CAACY,CAAE;IACVC,CAAC,EAAEb,IAAI,CAACa,CAAE;IACVC,IAAI,EAAElB,OAAO,CAACmB,OAAQ;IACtBC,IAAI,EAAER,SAAU;IAChBS,OAAO,EAAEb,WAAY;IACrBc,SAAS,EAAG,iBAAgBhB,QAAQ,GAAG,QAAQ,GAAG,EAAG,EAAE;IAAAiB,QAAA,eAEvDrB,OAAA,CAACH,IAAI;MAACuB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAG,GAAEnB,IAAI,CAACW,CAAE,IAAGX,IAAI,CAACY,CAAE,IAAGZ,IAAI,CAACa,CAAE;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;EAGd,SAASd,kBAAkBA,CAACC,KAAK,EAAE;IAC/B,QAAQA,KAAK;MACT,KAAK,QAAQ;QACT,OAAO,YAAY;MACvB,KAAK,UAAU;QACX,OAAO,YAAY;MACvB;QACI,OAAO,MAAM;IACrB;EACJ;AACJ,CAAC;AAACT,EAAA,CAnCIF,kBAAkB;AAAAyB,EAAA,GAAlBzB,kBAAkB;AAqCxB,eAAeA,kBAAkB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}