{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\InteractiveHexagon.js\",\n  _s = $RefreshSig$();\n//This component is responsible for rendering the hexagonal tiles and the interactivity.\n\nimport React, { useState } from 'react';\nimport { Hexagon, Text } from 'react-hexgrid';\nimport configs from './configurations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveHexagon = ({\n  tile\n}) => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const handleClick = () => {\n    setIsActive(!isActive); // Toggle the active state\n  };\n\n  // Check if tile and its properties are correctly passed\n  console.log('Tile:', tile);\n\n  // Simplified fill color logic for debugging\n  const fillColor = isActive ? 'red' : 'green';\n  return /*#__PURE__*/_jsxDEV(Hexagon, {\n    q: tile.q,\n    r: tile.r,\n    s: tile.s,\n    size: configs.hexSize,\n    fill: fillColor,\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      children: `${tile.q},${tile.r},${tile.s}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveHexagon, \"OFRYOMGmWDzfQ4dzLF00ag1mHo0=\");\n_c = InteractiveHexagon;\nexport default InteractiveHexagon;\nvar _c;\n$RefreshReg$(_c, \"InteractiveHexagon\");","map":{"version":3,"names":["React","useState","Hexagon","Text","configs","jsxDEV","_jsxDEV","InteractiveHexagon","tile","_s","isActive","setIsActive","handleClick","console","log","fillColor","q","r","s","size","hexSize","fill","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/InteractiveHexagon.js"],"sourcesContent":["//This component is responsible for rendering the hexagonal tiles and the interactivity.\r\n\r\nimport React, { useState } from 'react';\r\nimport { Hexagon, Text } from 'react-hexgrid';\r\nimport configs from './configurations';\r\n\r\nconst InteractiveHexagon = ({ tile }) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setIsActive(!isActive); // Toggle the active state\r\n  };\r\n\r\n  // Check if tile and its properties are correctly passed\r\n  console.log('Tile:', tile);\r\n\r\n  // Simplified fill color logic for debugging\r\n  const fillColor = isActive ? 'red' : 'green';\r\n\r\n  return (\r\n    <Hexagon \r\n      q={tile.q} \r\n      r={tile.r} \r\n      s={tile.s} \r\n      size={configs.hexSize} \r\n      fill={fillColor}\r\n      onClick={handleClick}\r\n    >\r\n      <Text>{`${tile.q},${tile.r},${tile.s}`}</Text>\r\n    </Hexagon>\r\n  );\r\n};\r\n\r\nexport default InteractiveHexagon;\r\n\r\n  \r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,IAAI,QAAQ,eAAe;AAC7C,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBD,WAAW,CAAC,CAACD,QAAQ,CAAC,CAAC,CAAC;EAC1B,CAAC;;EAED;EACAG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEN,IAAI,CAAC;;EAE1B;EACA,MAAMO,SAAS,GAAGL,QAAQ,GAAG,KAAK,GAAG,OAAO;EAE5C,oBACEJ,OAAA,CAACJ,OAAO;IACNc,CAAC,EAAER,IAAI,CAACQ,CAAE;IACVC,CAAC,EAAET,IAAI,CAACS,CAAE;IACVC,CAAC,EAAEV,IAAI,CAACU,CAAE;IACVC,IAAI,EAAEf,OAAO,CAACgB,OAAQ;IACtBC,IAAI,EAAEN,SAAU;IAChBO,OAAO,EAAEV,WAAY;IAAAW,QAAA,eAErBjB,OAAA,CAACH,IAAI;MAAAoB,QAAA,EAAG,GAAEf,IAAI,CAACQ,CAAE,IAAGR,IAAI,CAACS,CAAE,IAAGT,IAAI,CAACU,CAAE;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAAClB,EAAA,CAzBIF,kBAAkB;AAAAqB,EAAA,GAAlBrB,kBAAkB;AA2BxB,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}