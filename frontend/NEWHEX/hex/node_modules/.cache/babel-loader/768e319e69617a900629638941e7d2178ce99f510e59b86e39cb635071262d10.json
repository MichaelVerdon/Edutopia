{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\Board.js\";\n//This component is responsible for rendering the hexagonal grid\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { HexGrid, Layout, Hexagon, Text, GridGenerator, HexUtils } from 'react-hexgrid';\nimport InteractiveHexagon from './InteractiveHexagon';\nimport GameSettings from './GameSettings';\nimport Tile from './Tile';\nimport configs from './configurations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    const config = configs['hexagon'];\n    const generator = GridGenerator.getGenerator(config.map);\n    const hexagons = generator.apply(this, config.mapProps);\n    this.state = {\n      hexagons,\n      config\n    };\n  }\n  changeType(event) {\n    const name = event.currentTarget.value;\n    const config = configs[name];\n    const generator = GridGenerator.getGenerator(config.map);\n    const hexagons = generator.apply(this, config.mapProps);\n    this.setState({\n      hexagons,\n      config\n    });\n  }\n  render() {\n    const {\n      hexagons,\n      config\n    } = this.state;\n    const layout = config.layout;\n    const size = {\n      x: layout.width,\n      y: layout.height\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select grid type and configuration from dropdown.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Template: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: ev => this.changeType(ev),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"hexagon\",\n            children: \"hexagon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"triangle\",\n            children: \"triangle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"parallelogram\",\n            children: \"parallelogram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"rectangle\",\n            children: \"rectangle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"orientedRectangle\",\n            children: \"orientedRectangle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HexGrid, {\n        width: config.width,\n        height: config.height,\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          size: size,\n          flat: layout.flat,\n          spacing: layout.spacing,\n          origin: config.origin,\n          children:\n          // note: key must be unique between re-renders.\n          // using config.mapProps+i makes a new key when the goal template chnages.\n          hexagons.map((hex, i) => /*#__PURE__*/_jsxDEV(Hexagon, {\n            q: hex.q,\n            r: hex.r,\n            s: hex.s,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: HexUtils.getID(hex)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 23\n            }, this)\n          }, config.mapProps + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this);\n  }\n}\n;\nexport default Board;","map":{"version":3,"names":["React","Component","useState","useEffect","HexGrid","Layout","Hexagon","Text","GridGenerator","HexUtils","InteractiveHexagon","GameSettings","Tile","configs","jsxDEV","_jsxDEV","Board","constructor","props","config","generator","getGenerator","map","hexagons","apply","mapProps","state","changeType","event","name","currentTarget","value","setState","render","layout","size","x","width","y","height","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","ev","flat","spacing","origin","hex","i","q","r","s","getID"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/Board.js"],"sourcesContent":["//This component is responsible for rendering the hexagonal grid\r\n\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { HexGrid, Layout, Hexagon, Text, GridGenerator, HexUtils } from 'react-hexgrid';\r\nimport InteractiveHexagon from './InteractiveHexagon';\r\nimport GameSettings from './GameSettings';\r\nimport Tile from './Tile';\r\nimport configs from './configurations';\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const config = configs['hexagon'];\r\n        const generator = GridGenerator.getGenerator(config.map);\r\n        const hexagons = generator.apply(this, config.mapProps);\r\n        this.state = { hexagons, config };\r\n      }\r\n    \r\n      changeType(event) {\r\n        const name = event.currentTarget.value;\r\n        const config = configs[name];\r\n        const generator = GridGenerator.getGenerator(config.map);\r\n        const hexagons = generator.apply(this, config.mapProps);\r\n        this.setState({ hexagons, config });\r\n      }\r\n    \r\n      render() {\r\n        const { hexagons, config } = this.state;\r\n        const layout = config.layout;\r\n        const size = { x: layout.width, y: layout.height };\r\n        return (\r\n          <div className=\"App\">\r\n            <h2>Select grid type and configuration from dropdown.</h2>\r\n            <div>\r\n            <strong>Template: </strong><select onChange={(ev) => this.changeType(ev)}>\r\n              <option name=\"hexagon\">hexagon</option>\r\n              <option name=\"triangle\">triangle</option>\r\n              <option name=\"parallelogram\">parallelogram</option>\r\n              <option name=\"rectangle\">rectangle</option>\r\n              <option name=\"orientedRectangle\">orientedRectangle</option>\r\n            </select>\r\n            </div>\r\n            <hr />\r\n            <HexGrid width={config.width} height={config.height}>\r\n              <Layout size={size} flat={layout.flat} spacing={layout.spacing} origin={config.origin}>\r\n                {\r\n                  // note: key must be unique between re-renders.\r\n                  // using config.mapProps+i makes a new key when the goal template chnages.\r\n                  hexagons.map((hex, i) => (\r\n                    <Hexagon key={config.mapProps + i} q={hex.q} r={hex.r} s={hex.s}>\r\n                      <Text>{HexUtils.getID(hex)}</Text>\r\n                    </Hexagon>\r\n                  ))\r\n                }\r\n              </Layout>\r\n            </HexGrid>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\nexport default Board;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}