{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\Desktop\\\\Work\\\\MENG TEAMPROJECT\\\\NEWHEX\\\\hex\\\\src\\\\Board.js\",\n  _s = $RefreshSig$();\n//This component is responsible for rendering the hexagonal grid\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { HexGrid, Layout, Hexagon, Text, GridGenerator, HexUtils } from 'react-hexgrid';\nimport InteractiveHexagon from './InteractiveHexagon';\nimport GameSettings from './GameSettings';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [tiles, setTiles] = useState([]);\n  useEffect(() => {\n    // Generate the grid based on GameSettings\n    const hexagons = GridGenerator.rectangle(GameSettings.gridWidth, GameSettings.gridHeight);\n    setTiles(hexagons.map(hex => new Tile(hex.q, hex.r, hex.s)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(HexGrid, {\n      width: GameSettings.windowSize.width,\n      height: GameSettings.windowSize.height,\n      viewBox: GameSettings.viewBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"K89rNACRvpWYUPpRRxSbp+VW0iM=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Component","useState","useEffect","HexGrid","Layout","Hexagon","Text","GridGenerator","HexUtils","InteractiveHexagon","GameSettings","Tile","jsxDEV","_jsxDEV","Board","_s","tiles","setTiles","hexagons","rectangle","gridWidth","gridHeight","map","hex","q","r","s","className","children","width","windowSize","height","viewBox","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nemes/Desktop/Work/MENG TEAMPROJECT/NEWHEX/hex/src/Board.js"],"sourcesContent":["//This component is responsible for rendering the hexagonal grid\r\n\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { HexGrid, Layout, Hexagon, Text, GridGenerator, HexUtils } from 'react-hexgrid';\r\nimport InteractiveHexagon from './InteractiveHexagon';\r\nimport GameSettings from './GameSettings';\r\nimport Tile from './Tile';\r\n\r\nconst Board = () => {\r\n  const [tiles, setTiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Generate the grid based on GameSettings\r\n    const hexagons = GridGenerator.rectangle(GameSettings.gridWidth, GameSettings.gridHeight);\r\n    setTiles(hexagons.map(hex => new Tile(hex.q, hex.r, hex.s)));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HexGrid \r\n        width={GameSettings.windowSize.width} \r\n        height={GameSettings.windowSize.height} \r\n        viewBox={GameSettings.viewBox}\r\n      >\r\n        {/* ... your SVG content ... */}\r\n      </HexGrid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7D,SAASC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,eAAe;AACvF,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,QAAQ,GAAGX,aAAa,CAACY,SAAS,CAACT,YAAY,CAACU,SAAS,EAAEV,YAAY,CAACW,UAAU,CAAC;IACzFJ,QAAQ,CAACC,QAAQ,CAACI,GAAG,CAACC,GAAG,IAAI,IAAIZ,IAAI,CAACY,GAAG,CAACC,CAAC,EAAED,GAAG,CAACE,CAAC,EAAEF,GAAG,CAACG,CAAC,CAAC,CAAC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBf,OAAA,CAACV,OAAO;MACN0B,KAAK,EAAEnB,YAAY,CAACoB,UAAU,CAACD,KAAM;MACrCE,MAAM,EAAErB,YAAY,CAACoB,UAAU,CAACC,MAAO;MACvCC,OAAO,EAAEtB,YAAY,CAACsB;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACrB,EAAA,CApBID,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}